{"version":3,"sources":["ng://api-count/lib/loader.service.ts","ng://api-count/lib/api-count.interceptor.ts","ng://api-count/lib/api-count.module.ts"],"names":["LoaderService","this","apiCount","api","BehaviorSubject","apiCountObservable","asObservable","prototype","addAPI","next","console","log","removeAPI","Injectable","args","providedIn","ApiCountInterceptor","injector","intercept","req","loaderService","get","authReq","clone","handle","pipe","map","event","HttpResponse","catchError","error","reason","status","throwError","Injector","httpInterceptorProviders","provide","HTTP_INTERCEPTORS","useClass","multi","ApiCountModule","NgModule","declarations","imports","providers","exports"],"mappings":"mbAAA,IAAAA,EAAA,WAaI,SAAAA,IALAC,KAAAC,SAAmB,EAEXD,KAAAE,IAA+B,IAAIC,EAAAA,gBAAgBH,KAAKC,UAChED,KAAAI,mBAAqBJ,KAAKE,IAAIG,sBAI9BN,EAAAO,UAAAC,OAAA,WACIP,KAAKC,UAAY,EACjBD,KAAKE,IAAIM,KAAKR,KAAKC,UACnBQ,QAAQC,IAAI,qBAAqBV,KAAKC,WAE1CF,EAAAO,UAAAK,UAAA,WACIX,KAAKC,UAAY,EACjBD,KAAKE,IAAIM,KAAKR,KAAKC,UACnBQ,QAAQC,IAAI,qBAAqBV,KAAKC,+BApB7CW,EAAAA,WAAUC,KAAA,CAAC,CACRC,WAAY,wJAJhB,GCAA,IAAAC,EAAA,WAWI,SAAAA,EAAoBC,GAAAhB,KAAAgB,SAAAA,SAIpBD,EAAAT,UAAAW,UAAA,SAAUC,EAAuBV,OACvBW,EAAgBnB,KAAKgB,SAASI,IAAIrB,GAKlCsB,EAAUH,EAAII,MAHI,IAOxB,OAFAH,EAAcZ,SAEPC,EAAKe,OAAOF,GAASG,KACxBC,EAAAA,KAAG,SAAEC,GAID,OAHIA,aAAiBC,EAAAA,cACjBR,EAAcR,YAEXe,KAEXE,EAAAA,YAAU,SAAEC,GAOR,MALO,CACHC,OAAQD,GAASA,EAAMA,OAASA,EAAMA,MAAMC,OAASD,EAAMA,MAAMC,OAAS,GAC1EC,OAAQF,EAAME,QAElBZ,EAAcR,YACPqB,EAAAA,WAAWH,4BAjCjCjB,EAAAA,WAAUC,KAAA,CAAC,CACRC,WAAY,oDAPKmB,EAAAA,2IAArB,GA4CA,IAAaC,EAA2B,CACpC,CAAEC,QAASC,EAAAA,kBAAmBC,SAAUtB,EAAqBuB,OAAO,IC7CxEC,EAAA,WAKA,SAAAA,KAO8B,2BAP7BC,EAAAA,SAAQ3B,KAAA,CAAC,CACR4B,aAAc,GACdC,QAAS,GAETC,UAAW,CAACT,GACZU,QAAS,OAEmBL,EAZ9B","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoaderService {\n\n    apiCount: number = 0;\n\n    private api: BehaviorSubject<number> = new BehaviorSubject(this.apiCount);\n    apiCountObservable = this.api.asObservable();\n\n    constructor() { }\n\n    addAPI() {\n        this.apiCount += 1;\n        this.api.next(this.apiCount);\n        console.log(`Ongoing API count ${this.apiCount}`)\n    }\n    removeAPI() {\n        this.apiCount -= 1;\n        this.api.next(this.apiCount);\n        console.log(`Ongoing API count ${this.apiCount}`)\n    }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError, timeout } from 'rxjs/operators';\nimport { LoaderService } from './loader.service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ApiCountInterceptor {\n    constructor(private injector: Injector) {\n\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const loaderService = this.injector.get(LoaderService);\n\n        let cloneChanges: any = {};\n\n        //Modify Request\n        const authReq = req.clone(cloneChanges)\n\n        loaderService.addAPI();\n\n        return next.handle(authReq).pipe(\n            map((event: HttpEvent<any>) => {\n                if (event instanceof HttpResponse) {\n                    loaderService.removeAPI();\n                }\n                return event;\n            }),\n            catchError((error: HttpErrorResponse) => {\n                let data = {};\n                data = {\n                    reason: error && error.error && error.error.reason ? error.error.reason : '',\n                    status: error.status\n                };\n                loaderService.removeAPI();\n                return throwError(error);\n            }));\n    }\n}\n\nexport const httpInterceptorProviders = [\n    { provide: HTTP_INTERCEPTORS, useClass: ApiCountInterceptor, multi: true },\n];\n","import { NgModule } from '@angular/core';\nimport { httpInterceptorProviders } from './api-count.interceptor';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n  ],\n  providers: [httpInterceptorProviders],\n  exports: []\n})\nexport class ApiCountModule { }\n\n\n"]}