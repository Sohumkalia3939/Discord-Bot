/**
 * @fileoverview added by tsickle
 * Generated from: lib/loader.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import * as i0 from "@angular/core";
export class LoaderService {
    constructor() {
        this.apiCount = 0;
        this.api = new BehaviorSubject(this.apiCount);
        this.apiCountObservable = this.api.asObservable();
    }
    /**
     * @return {?}
     */
    addAPI() {
        this.apiCount += 1;
        this.api.next(this.apiCount);
        console.log(`Ongoing API count ${this.apiCount}`);
    }
    /**
     * @return {?}
     */
    removeAPI() {
        this.apiCount -= 1;
        this.api.next(this.apiCount);
        console.log(`Ongoing API count ${this.apiCount}`);
    }
}
LoaderService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
LoaderService.ctorParameters = () => [];
/** @nocollapse */ LoaderService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function LoaderService_Factory() { return new LoaderService(); }, token: LoaderService, providedIn: "root" });
if (false) {
    /** @type {?} */
    LoaderService.prototype.apiCount;
    /**
     * @type {?}
     * @private
     */
    LoaderService.prototype.api;
    /** @type {?} */
    LoaderService.prototype.apiCountObservable;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hcGktY291bnQvIiwic291cmNlcyI6WyJsaWIvbG9hZGVyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBS3ZDLE1BQU0sT0FBTyxhQUFhO0lBT3RCO1FBTEEsYUFBUSxHQUFXLENBQUMsQ0FBQztRQUViLFFBQUcsR0FBNEIsSUFBSSxlQUFlLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzFFLHVCQUFrQixHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLENBQUM7SUFFN0IsQ0FBQzs7OztJQUVqQixNQUFNO1FBQ0YsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQUM7UUFDbkIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzdCLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFBO0lBQ3JELENBQUM7Ozs7SUFDRCxTQUFTO1FBQ0wsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQUM7UUFDbkIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzdCLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFBO0lBQ3JELENBQUM7OztZQXJCSixVQUFVLFNBQUM7Z0JBQ1IsVUFBVSxFQUFFLE1BQU07YUFDckI7Ozs7Ozs7SUFHRyxpQ0FBcUI7Ozs7O0lBRXJCLDRCQUEwRTs7SUFDMUUsMkNBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTG9hZGVyU2VydmljZSB7XG5cbiAgICBhcGlDb3VudDogbnVtYmVyID0gMDtcblxuICAgIHByaXZhdGUgYXBpOiBCZWhhdmlvclN1YmplY3Q8bnVtYmVyPiA9IG5ldyBCZWhhdmlvclN1YmplY3QodGhpcy5hcGlDb3VudCk7XG4gICAgYXBpQ291bnRPYnNlcnZhYmxlID0gdGhpcy5hcGkuYXNPYnNlcnZhYmxlKCk7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gICAgYWRkQVBJKCkge1xuICAgICAgICB0aGlzLmFwaUNvdW50ICs9IDE7XG4gICAgICAgIHRoaXMuYXBpLm5leHQodGhpcy5hcGlDb3VudCk7XG4gICAgICAgIGNvbnNvbGUubG9nKGBPbmdvaW5nIEFQSSBjb3VudCAke3RoaXMuYXBpQ291bnR9YClcbiAgICB9XG4gICAgcmVtb3ZlQVBJKCkge1xuICAgICAgICB0aGlzLmFwaUNvdW50IC09IDE7XG4gICAgICAgIHRoaXMuYXBpLm5leHQodGhpcy5hcGlDb3VudCk7XG4gICAgICAgIGNvbnNvbGUubG9nKGBPbmdvaW5nIEFQSSBjb3VudCAke3RoaXMuYXBpQ291bnR9YClcbiAgICB9XG59XG4iXX0=